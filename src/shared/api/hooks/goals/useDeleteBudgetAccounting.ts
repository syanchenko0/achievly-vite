/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from "@/shared/api/axios-client";
import type {
  RequestConfig,
  ResponseErrorConfig,
} from "@/shared/api/axios-client";
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import type {
  DeleteBudgetAccountingMutationResponse,
  DeleteBudgetAccountingPathParams,
  DeleteBudgetAccounting404,
} from "../../models/goals/DeleteBudgetAccounting";
import { useMutation } from "@tanstack/react-query";

export const deleteBudgetAccountingMutationKey = () =>
  [{ url: "/budget/accounting/delete/{id}" }] as const;

export type DeleteBudgetAccountingMutationKey = ReturnType<
  typeof deleteBudgetAccountingMutationKey
>;

/**
 * {@link /budget/accounting/delete/:id}
 */
export async function deleteBudgetAccounting(
  { id }: { id: DeleteBudgetAccountingPathParams["id"] },
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config;

  const res = await request<
    DeleteBudgetAccountingMutationResponse,
    ResponseErrorConfig<DeleteBudgetAccounting404>,
    unknown
  >({
    method: "DELETE",
    url: `/budget/accounting/delete/${id}`,
    ...requestConfig,
  });
  return res.data;
}

/**
 * {@link /budget/accounting/delete/:id}
 */
export function useDeleteBudgetAccounting<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteBudgetAccountingMutationResponse,
      ResponseErrorConfig<DeleteBudgetAccounting404>,
      { id: DeleteBudgetAccountingPathParams["id"] },
      TContext
    > & { client?: QueryClient };
    client?: Partial<RequestConfig> & { client?: typeof client };
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {};
  const { client: queryClient, ...mutationOptions } = mutation;
  const mutationKey =
    mutationOptions.mutationKey ?? deleteBudgetAccountingMutationKey();

  return useMutation<
    DeleteBudgetAccountingMutationResponse,
    ResponseErrorConfig<DeleteBudgetAccounting404>,
    { id: DeleteBudgetAccountingPathParams["id"] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteBudgetAccounting({ id }, config);
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  );
}
